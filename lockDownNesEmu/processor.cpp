#include "processor.h"
#include "types.h"
#include "memory.h"
#include "enum.h"

#include <array>

using namespace std;

namespace
{
using opcode_addr_pair = pair<opcode_e, addr_mode_e>;
using instr_cycle_pair = pair<opcode_addr_pair, uint16_t>;
using op_row_t = array<instr_cycle_pair, 16>;
using op_table_t = array<op_row_t, 16>;

op_row_t row1 = {instr_cycle_pair(opcode_addr_pair(brk_op, imm_addr), 7),
                 instr_cycle_pair(opcode_addr_pair(ora_op, izx_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 8),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 3),
                 instr_cycle_pair(opcode_addr_pair(ora_op, zp_addr), 3),
                 instr_cycle_pair(opcode_addr_pair(asl_op, zp_addr), 5),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 5),
                 instr_cycle_pair(opcode_addr_pair(php_op, imp_addr), 3),
                 instr_cycle_pair(opcode_addr_pair(ora_op, imm_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(asl_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(ora_op, abs_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(asl_op, abs_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 6)};

op_row_t row2 = {instr_cycle_pair(opcode_addr_pair(bpl_op, rel_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ora_op, izy_addr), 5),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 8),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(ora_op, zpx_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(asl_op, zpx_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(clc_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ora_op, aby_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 7),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(ora_op, abx_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(asl_op, abx_addr), 7),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 7)};

op_row_t row3 = {instr_cycle_pair(opcode_addr_pair(jsr_op, abs_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(and_op, izx_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 8),
                 instr_cycle_pair(opcode_addr_pair(bit_op, zp_addr), 3),
                 instr_cycle_pair(opcode_addr_pair(and_op, zp_addr), 3),
                 instr_cycle_pair(opcode_addr_pair(rol_op, zp_addr), 5),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 5),
                 instr_cycle_pair(opcode_addr_pair(plp_op, imp_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(and_op, imm_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(rol_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(bit_op, abs_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(and_op, abs_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(rol_op, abs_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 6)};

op_row_t row4 = {instr_cycle_pair(opcode_addr_pair(bmi_op, rel_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(and_op, izy_addr), 5),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 8),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(and_op, zpx_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(rol_op, zpx_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(sec_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(and_op, aby_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 7),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(and_op, abx_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(rol_op, abx_addr), 7),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 7)};

op_row_t row5 = {instr_cycle_pair(opcode_addr_pair(rti_op, imp_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(eor_op, izx_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 8),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 3),
                 instr_cycle_pair(opcode_addr_pair(eor_op, zp0_addr), 3),
                 instr_cycle_pair(opcode_addr_pair(lsr_op, zp0_addr), 5),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 5),
                 instr_cycle_pair(opcode_addr_pair(pha_op, imp_addr), 3),
                 instr_cycle_pair(opcode_addr_pair(eor_op, imm_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(lsr_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(jmp_op, abs_addr), 3),
                 instr_cycle_pair(opcode_addr_pair(eor_op, abs_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(lsr_op, abs_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 6)};

op_row_t row6 = {instr_cycle_pair(opcode_addr_pair(bvc_op, rel_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(eor_op, izy_addr), 5),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 8),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(eor_op, zpx_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(lsr_op, zpx_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(cli_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(eor_op, aby_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 7),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(eor_op, abx_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(lsr_op, abx_addr), 7),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 7)};

op_row_t row7 = {instr_cycle_pair(opcode_addr_pair(ts_op, imp_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(adc_op, izx_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 8),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 3),
                 instr_cycle_pair(opcode_addr_pair(adc_op, zp0_addr), 3),
                 instr_cycle_pair(opcode_addr_pair(ror_op, zp0_addr), 5),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 5),
                 instr_cycle_pair(opcode_addr_pair(pla_op, imp_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(adc_op, imm_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ror_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(jmp_op, ind_addr), 5),
                 instr_cycle_pair(opcode_addr_pair(adc_op, abs_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(ror_op, abs_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 6)};

op_row_t row8 = {instr_cycle_pair(opcode_addr_pair(bvs_op, rel_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(adc_op, izy_addr), 5),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 8),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(adc_op, zpx_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(ror_op, zpx_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(sei_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(adc_op, aby_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 7),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(adc_op, abx_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(ror_op, abx_addr), 7),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 7)};

op_row_t row9 = {instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(sta_op, izx_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 6),
                 instr_cycle_pair(opcode_addr_pair(sty_op, zp0_addr), 3),
                 instr_cycle_pair(opcode_addr_pair(sta_op, zp0_addr), 3),
                 instr_cycle_pair(opcode_addr_pair(stx_op, zp0_addr), 3),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 3),
                 instr_cycle_pair(opcode_addr_pair(dey_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(txa_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                 instr_cycle_pair(opcode_addr_pair(sty_op, abs_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(sta_op, abs_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(stx_op, abs_addr), 4),
                 instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 4)};

op_row_t row10 = {instr_cycle_pair(opcode_addr_pair(cc_op, rel_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(sta_op, izy_addr), 6),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 6),
                  instr_cycle_pair(opcode_addr_pair(sty_op, zpx_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(sta_op, zpx_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(stx_op, zpy_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(tya_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(sta_op, aby_addr), 5),
                  instr_cycle_pair(opcode_addr_pair(txs_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 5),
                  instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 5),
                  instr_cycle_pair(opcode_addr_pair(sta_op, abx_addr), 5),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 5),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 5)};

op_row_t row11 = {instr_cycle_pair(opcode_addr_pair(dy_op, imm_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(lda_op, izx_addr), 6),
                  instr_cycle_pair(opcode_addr_pair(ldx_op, imm_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 6),
                  instr_cycle_pair(opcode_addr_pair(ldy_op, zp0_addr), 3),
                  instr_cycle_pair(opcode_addr_pair(lda_op, zp0_addr), 3),
                  instr_cycle_pair(opcode_addr_pair(ldx_op, zp0_addr), 3),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 3),
                  instr_cycle_pair(opcode_addr_pair(tay_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(lda_op, imm_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(tax_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(ldy_op, abs_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(lda_op, abs_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(ldx_op, abs_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 4)};

op_row_t row12 = {instr_cycle_pair(opcode_addr_pair(cs_op, rel_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(lda_op, izy_addr), 5),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 5),
                  instr_cycle_pair(opcode_addr_pair(ldy_op, zpx_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(lda_op, zpx_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(ldx_op, zpy_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(clv_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(lda_op, aby_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(tsx_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(ldy_op, abx_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(lda_op, abx_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(ldx_op, aby_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 4)};

op_row_t row13 = {instr_cycle_pair(opcode_addr_pair(cpy_op, imm_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(cmp_op, izx_addr), 6),
                  instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 8),
                  instr_cycle_pair(opcode_addr_pair(cpy_op, zp0_addr), 3),
                  instr_cycle_pair(opcode_addr_pair(cmp_op, zp0_addr), 3),
                  instr_cycle_pair(opcode_addr_pair(dec_op, zp0_addr), 5),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 5),
                  instr_cycle_pair(opcode_addr_pair(iny_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(cmp_op, imm_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(dex_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(cpy_op, abs_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(cmp_op, abs_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(dec_op, abs_addr), 6),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 6)};

op_row_t row14 = {instr_cycle_pair(opcode_addr_pair(ne_op, rel_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(cmp_op, izy_addr), 5),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 8),
                  instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(cmp_op, zpx_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(dec_op, zpx_addr), 6),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 6),
                  instr_cycle_pair(opcode_addr_pair(cld_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(cmp_op, aby_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 7),
                  instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(cmp_op, abx_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(dec_op, abx_addr), 7),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 7)};

op_row_t row15 = {instr_cycle_pair(opcode_addr_pair(cpx_op, imm_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(sbc_op, izx_addr), 6),
                  instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 8),
                  instr_cycle_pair(opcode_addr_pair(cpx_op, zp0_addr), 3),
                  instr_cycle_pair(opcode_addr_pair(sbc_op, zp0_addr), 3),
                  instr_cycle_pair(opcode_addr_pair(inc_op, zp0_addr), 5),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 5),
                  instr_cycle_pair(opcode_addr_pair(inx_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(sbc_op, imm_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(sbc_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(cpx_op, abs_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(sbc_op, abs_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(inc_op, abs_addr), 6),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 6)};

op_row_t row16 = {instr_cycle_pair(opcode_addr_pair(beq_op, rel_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(sbc_op, izy_addr), 5),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 8),
                  instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(sbc_op, zpx_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(inc_op, zpx_addr), 6),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 6),
                  instr_cycle_pair(opcode_addr_pair(sed_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(sbc_op, aby_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 2),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 7),
                  instr_cycle_pair(opcode_addr_pair(nop_op, imp_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(sbc_op, abx_addr), 4),
                  instr_cycle_pair(opcode_addr_pair(inc_op, abx_addr), 7),
                  instr_cycle_pair(opcode_addr_pair(ill_op, imp_addr), 7)};

  op_table_t op_table = {row1, row2,  row3,  row4,  row5,  row6,  row7,  row8,
                       row9, row10, row11, row12, row13, row14, row15, row16};

}

processor::processor() 
{

}